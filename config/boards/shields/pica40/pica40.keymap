#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

#define COMBOTIME 30

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27  // left-hand keys
#define KEYS_R 5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33  // right-hand keys
#define THUMBS 34 35 36 37 38 39

&lt {
    tapping-term-ms = <150>;
};

&mt {
    tapping-term-ms = <150>;
};

/ {

    behaviors {        
        hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <125>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
        };
        hmr: homerow_mods_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };


    macros {
        // (
        win_left_parent:  win_left_parent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N4 &kp KP_N0 >
                , <&macro_release &kp LALT>
                ;
        };
        // )
        win_right_parent:  win_right_parent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N4 &kp KP_N1 >
                , <&macro_release &kp LALT>
                ;
        };
        // {
        win_left_brace:  win_left_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N3>
                , <&macro_release &kp LALT>
                ;
        };
        // }
        win_right_brace:  win_right_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N5>
                , <&macro_release &kp LALT>
                ;
        };
        // [
        win_left_bracket:  win_left_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N9 &kp KP_N1 >
                , <&macro_release &kp LALT>
                ;
        };
        // ]
        win_right_bracket:  win_right_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N9 &kp KP_N3 >
                , <&macro_release &kp LALT>
                ;
        };
        // <
        win_left_triag:  win_left_triag {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N6 &kp KP_N0 >
                , <&macro_release &kp LALT>
                ;
        };
        // >
        win_right_triag:  win_right_triag {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N6 &kp KP_N2 >
                , <&macro_release &kp LALT>
                ;
        };
        // /
        win_slash:  win_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N4 &kp KP_N7 >
                , <&macro_release &kp LALT>
                ;
        };
        // \

        win_back_slash:  win_back_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N9 &kp KP_N2 >
                , <&macro_release &kp LALT>
                ;
        };
        // @
        win_sobaka:  win_sobaka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N6 &kp KP_N4 >
                , <&macro_release &kp LALT>
                ;
        };
        // #
        win_reshetka:  win_reshetka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N5 >
                , <&macro_release &kp LALT>
                ;
        };
        // $
        win_dollar:  win_dollar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N6 >
                , <&macro_release &kp LALT>
                ;
        };
        // ^
        win_cap:  win_cap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N9 &kp KP_N4 >
                , <&macro_release &kp LALT>
                ;
        };
        // &
        win_and:  win_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N8 >
                , <&macro_release &kp LALT>
                ;
        };
        // ~
        win_tilde:  win_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        // `
        win_apostro:  win_apostro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N9 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        // |
        win_pipe:  win_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N4>
                , <&macro_release &kp LALT>
                ;
        };
        // '
        win_quote:  win_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N9 >
                , <&macro_release &kp LALT>
                ;
        };
        // "
        win_double_quote:  win_double_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N3 &kp KP_N4 >
                , <&macro_release &kp LALT>
                ;
        };
        // ;
        win_semicolon:  win_semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N5 &kp KP_N9 >
                , <&macro_release &kp LALT>
                ;
        };
        // :
        win_colon:  win_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N5 &kp KP_N8 >
                , <&macro_release &kp LALT>
                ;
        };
        // .
        win_dot:  win_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N4 &kp KP_N6 >
                , <&macro_release &kp LALT>
                ;
        };
        // ,
        win_comma:  win_comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N4 &kp KP_N4 >
                , <&macro_release &kp LALT>
                ;
        };
        // ?
        win_question:  win_question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp KP_N6 &kp KP_N3 >
                , <&macro_release &kp LALT>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_caps_word {
            timeout-ms = <COMBOTIME>;
            key-positions = <14 17>;
            bindings = <&kp CAPS>;
        };
        combo_toggle_win_mac {
            timeout-ms = <50>;
            key-positions = <3 4 5 6>;
            bindings = <&tog 4>;
        };
        win_combo_slash {
            timeout-ms = <COMBOTIME>;
            key-positions = <30 31>;
            bindings = <&win_slash>;
            layers = <0>;
        };
        win_combo_backslash {
            timeout-ms = <COMBOTIME>;
            key-positions = <24 25>;
            bindings = <&win_back_slash>;
            layers = <0>;
        };
        mac_combo_slash {
            timeout-ms = <COMBOTIME>;
            key-positions = <30 31>;
            bindings = <&kp KP_N8>;
            layers = <4>;
        };
        mac_combo_backslash {
            timeout-ms = <COMBOTIME>;
            key-positions = <24 25>;
            bindings = <&kp LS(KP_N8)>;
            layers = <4>;
        };
        win_combo_left_triag {
            timeout-ms = <COMBOTIME>;
            key-positions = <12 13>;
            bindings = <&win_left_triag>;
            layers = <0>;
        };
        win_combo_right_triag {
            timeout-ms = <COMBOTIME>;
            key-positions = <18 19>;
            bindings = <&win_right_triag>;
            layers = <0>;
        };
        win_combo_left_bracket {
            timeout-ms = <COMBOTIME>;
            key-positions = <25 26>;
            bindings = <&win_left_bracket>;
            layers = <0>;
        };
        win_combo_right_bracket {
            timeout-ms = <COMBOTIME>;
            key-positions = <29 30>;
            bindings = <&win_right_bracket>;
            layers = <0>;
        };
        win_combo_left_parent {
            timeout-ms = <COMBOTIME>;
            key-positions = <13 14>;
            bindings = <&win_left_parent>;
            layers = <0>;
        };
        win_combo_right_parent {
            timeout-ms = <COMBOTIME>;
            key-positions = <17 18>;
            bindings = <&win_right_parent>;
            layers = <0>;
        };
        win_combo_left_brace {
            timeout-ms = <COMBOTIME>;
            key-positions = <2 3>;
            bindings = <&win_left_brace>;
            layers = <0>;
        };
        win_combo_right_brace {
            timeout-ms = <COMBOTIME>;
            key-positions = <6 7>;
            bindings = <&win_right_brace>;
            layers = <0>;
        };
    };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                    
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |              |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   CTRL/Tab   |GUI/A    |ALT/S   |CTR/D   |LSHFT/F  |    G    |       |   H   |LSHFT/J  | CTR/K   |ALT/L    | GUI/;    |     '    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    |          |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   | GUI/TAB|MO1/ESC  | MO2/SPC |       |  RET  |   BKSP  | ALT/DEL |
//                                   '--------+---------+---------'       '-------+---------+---------'

                        bindings = <
                  &kp Q       &kp W      &kp E     &kp R           &kp T   &kp Y  &kp U           &kp I        &kp O     &kp P
   &kp TAB  &hm RGUI A       &hm LALT S      &hm LCTRL D     &hm LSHFT F           &kp G   &kp H  &hm LSHFT J           &hm LCTRL K        &hm LALT L     &hm RGUI SEMI   &kp SQT
   &trans      &kp Z       &kp X      &kp C     &kp V           &kp B   &kp N  &kp M           &kp COMMA    &kp DOT   &kp FSLH   &trans 
                  &mt LCTRL TAB   &lt 1 ESC      &lt 2 SPACE              &lt 8 RET       &kp BSPC    &mt LALT DEL
                        >;
                        
                        // sensor-bindings = <&inc_dec_kp LS(LC(LA(L))) LS(LC(LA(H))) &inc_dec_kp LA(L) LA(H)>;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN >;
                        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                        // sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW &inc_dec_kp UP_ARROW DOWN_ARROW>;
                };
                
                lower_layer {
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |              |    1    |    2   |   3    |    4    |    5    |       |   6   |    7    |    8    |    9    |     0    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |  CTRL/Tab    |    !    |alt/@   |   #    |    $    |    %    |       |   ^   |    &    |    *    |    (    | GUI/)    |     \    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    `    |    +   |   -    |    {    |    [    |       |   ]   |    }    |    =    |    _    |    ~     |          |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |GUI/TAB |         |   MO3   |       |  RET  |   BKSP  | ALT/DEL |
//                                   '--------+---------+---------'       '-------+---------+---------'
                        bindings = <
                     &kp N1     &kp N2       &kp N3            &kp N4             &kp N5            &kp N6                   &kp N7                     &kp N8                 &kp N9                   &kp N0
   &kp TAB     &hm RGUI EXCL     &win_sobaka            &win_reshetka           &win_dollar             &kp PRCNT         &win_cap                &win_and                   &hm LCTRL STAR        &win_quote                 &win_semicolon   &kp BSLH
   &trans         &win_tilde       &win_apostro       &kp MINUS       &kp PLUS       &trans  &win_pipe        &kp EQUAL            &kp UNDERSCORE           &win_double_quote           &win_colon     &trans
                      &mt LCTRL TAB           &trans               &mo 3        &win_comma       &win_dot    &win_question
                        >;
                };
                
                raise_layer {
// .----------------------------------------------------------------.       .-----------------------------------------------------------------.
// |                |   F1  |   F2   |   F3   |    F4    |   F5     |       |         | shft     | cntrl   |  alt    |   gui   |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |       CTRL/Tab |   F6  |  F7    |  F8    |   F9     |   F10    |       |  LEFT   |   DOWN   |   UP    |  RIGHT  |  [ <х>   |   ] <ъ>     |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |  F11  |   F12  |  LSHFT |  DEL     | INS      |       |   [ <х> |   ] <ъ>  |  ` <ё>  |   "     |    '     |             |
// '---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------'
//                                   |GUI/TAB |   MO3    |          |       |  RET    |   BKSP   | ALT/DEL |
//                                   '--------+----------+----------'       '---------+----------+---------'

                        bindings = <
                          &kp F1     &kp F2     &kp F3       &kp F4       &kp F5            &kp LG(SPACE)               &kp RSHFT           &kp LCTRL       &kp LALT      &kp LGUI
   &kp TAB          &hm RGUI F6     &hm LALT F7     &hm LCTRL F8       &hm LSHFT F9       &kp F10           &kp LEFT_ARROW       &kp DOWN_ARROW          &kp UP_ARROW     &kp RIGHT_ARROW    &kp LEFT_BRACKET      &kp RIGHT_BRACKET
   &trans              &kp F11    &kp F12    &kp LSHFT       &kp DEL       &kp INS            &kp LEFT_BRACKET   &kp RIGHT_BRACKET     &kp GRAVE             &kp DOUBLE_QUOTES             &kp APOS       &trans
                                     &mt LCTRL TAB   &mo 3   &trans                    &kp RET       &kp BSPC    &mt LALT DEL
                        >;
                };

                adjust_layer {
// .--------------------------------------------------------.       .--------------------------------------------------------------.
// |         |        |        |        |         |OUT_TOG  |       |BRI_DEC |BRI_INC |  MUTE   |   VOL-  |   VOL+   |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |  BTCLR  |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |        |page_down |page_up|         |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |reset   |bootload|        |         |         |       |        |        |         |bootload | reset    |             |
// '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
//                             |        |         |         |       |  PREV  |  PLAY  |  NEXT   |
//                             '--------+---------+---------'       '--------+--------+---------'

                        bindings = <
               &trans          &trans         &trans          &trans          &out OUT_TOG            &kp C_BRI_DEC &kp C_BRI_INC &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP
   &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &trans &kp PAGE_DOWN &kp PAGE_UP &trans &trans &trans
   &trans      &sys_reset     &bootloader         &trans          &trans          &trans            &trans &trans &trans &bootloader &sys_reset &trans
                                   &trans &trans &trans                                         &kp C_PREV &kp C_PP &kp C_NEXT
                        >;
                };






                // windows layers







                default_layer_win {
                    
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |              |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   GUI/Tab    |GUI/A    |ALT/S   |CTR/D   |LSHFT/F  |    G    |       |   H   |LSHFT/J  | CTR/K   |ALT/L    | GUI/;    |     '    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    |          |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |CTRL/TAB|MO1/ESC  | MO2/SPC |       |  RET  |   BKSP  | ALT/DEL |
//                                   '--------+---------+---------'       '-------+---------+---------'

                        bindings = <
                  &kp Q       &kp W      &kp E     &kp R           &kp T   &kp Y  &kp U           &kp I        &kp O     &kp P
   &kp TAB  &hm RGUI A       &hm LALT S      &hm LCTRL D     &hm LSHFT F           &kp G   &kp H  &hm LSHFT J           &hm LCTRL K        &hm LALT L     &hm RGUI SEMI   &kp SQT
   &trans      &kp Z       &kp X      &kp C     &kp V           &kp B   &kp N  &kp M           &kp COMMA    &kp DOT   &kp FSLH   &trans
                  &mt RGUI TAB    &lt 5 ESC      &lt 6 SPACE              &lt 8 RET       &kp BSPC    &mt LALT DEL
                        >;
                        
                        // sensor-bindings = <&inc_dec_kp LS(LC(LA(L))) LS(LC(LA(H))) &inc_dec_kp LA(L) LA(H)>;
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN >;
                        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                        // sensor-bindings = <&inc_dec_kp RIGHT_ARROW LEFT_ARROW &inc_dec_kp UP_ARROW DOWN_ARROW>;
                };
                
                lower_layer_win {
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |              |    1    |    2   |   3    |    4    |    5    |       |   6   |    7    |    8    |    9    |     0    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |  GUI/Tab     |    !    |alt/@   |   #    |    $    |    %    |       |   ^   |    &    |    *    |    (    | GUI/)    |     \    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    `    |    +   |   -    |    {    |    [    |       |   ]   |    }    |    =    |    _    |    ~     |          |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |CTRL/TAB|         |   MO3   |       |  RET  |   BKSP  | ALT/DEL |
//                                   '--------+---------+---------'       '-------+---------+---------'
                        bindings = <
                     &kp N1     &kp N2       &kp N3            &kp N4             &kp N5            &kp N6                   &kp N7                     &kp N8                 &kp N9                   &kp N0
   &kp TAB     &hm RGUI EXCL     &hm LALT AT            &hm LCTRL HASH           &hm LSHFT DLLR             &kp PRCNT         &kp CARET                &hm LSHFT AMPS                   &hm LCTRL STAR        &hm LALT LPAR                 &hm RGUI RPAR   &kp BSLH
   &trans         &kp GRAVE       &kp PLUS       &kp MINUS       &kp LEFT_BRACE       &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp RIGHT_BRACE            &kp EQUAL           &kp UNDERSCORE           &kp TILDE     &trans
                                             &mt RGUI TAB           &trans               &mo 7        &kp RET       &kp BSPC    &mt LALT DEL
                        >;
                };
                
                raise_layer_win {
// .----------------------------------------------------------------.       .-----------------------------------------------------------------.
// |                |   F1  |   F2   |   F3   |    F4    |   F5     |       |         | shft     | cntrl   |  alt    |   gui   |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |       CTRL/Tab |   F6  |  F7    |  F8    |   F9     |   F10    |       |  LEFT   |   DOWN   |   UP    |  RIGHT  |  [ <х>   |   ] <ъ>     |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |  F11  |   F12  |  LSHFT |  DEL     | INS      |       |   [ <х> |   ] <ъ>  |  ` <ё>  |   "     |    '     |             |
// '---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------'
//                                   |GUI/TAB |   MO3    |          |       |  RET    |   BKSP   | ALT/DEL |
//                                   '--------+----------+----------'       '---------+----------+---------'

                        bindings = <
                          &kp F1     &kp F2     &kp F3       &kp F4       &kp F5            &kp LG(SPACE)               &kp RSHFT           &kp LCTRL       &kp LALT      &kp LGUI
   &kp TAB          &hm RGUI F6     &hm LALT F7     &hm LCTRL F8       &hm LSHFT F9       &kp F10           &kp LEFT_ARROW       &kp DOWN_ARROW          &kp UP_ARROW     &kp RIGHT_ARROW    &kp LEFT_BRACKET      &kp RIGHT_BRACKET
   &trans              &kp F11    &kp F12    &kp LSHFT       &kp DEL       &kp INS            &kp LEFT_BRACKET   &kp RIGHT_BRACKET     &kp GRAVE             &kp DOUBLE_QUOTES             &kp APOS       &trans
                                     &mt RGUI TAB   &mo 7   &trans                    &kp LS(KP_N9)       &kp KP_N9    &kp LS(KP_N3)
                        >;
                };

                adjust_layer_win {
// .--------------------------------------------------------.       .--------------------------------------------------------------.
// |         |        |        |        |         |OUT_TOG  |       |BRI_DEC |BRI_INC |  MUTE   |   VOL-  |   VOL+   |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |  BTCLR  |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |        |page_down |page_up|         |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |reset   |bootload|        |         |         |       |        |        |         |bootload | reset    |             |
// '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
//                             |        |         |         |       |  PREV  |  PLAY  |  NEXT   |
//                             '--------+---------+---------'       '--------+--------+---------'

                        bindings = <
               &trans          &trans         &trans          &trans          &out OUT_TOG            &kp C_BRI_DEC &kp C_BRI_INC &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP
   &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &trans &kp PAGE_DOWN &kp PAGE_UP &trans &trans &trans
   &trans      &sys_reset     &bootloader         &trans          &trans          &trans            &trans &trans &trans &bootloader &sys_reset &trans
                                   &trans &trans &trans                                         &kp C_PREV &kp C_PP &kp C_NEXT
                        >;
                };

                numpad_layer {
                        bindings = <
                     &trans          &trans         &trans          &trans &trans          &trans             &kp N7          &kp N8   &kp N9          &trans
    &trans           &kp LGUI          &kp LALT         &kp LCTRL          &kp LSHFT       &trans &trans      &kp N4          &kp N5   &kp N6          &kp N0              &kp KP_NUMLOCK
    &trans           &trans          &trans         &trans          &trans &trans          &trans             &kp N1          &kp N2   &kp N3          &trans       &trans
                                   &trans &trans &kp N0                                         &trans &trans &trans

                        >;

                };

        };
};
